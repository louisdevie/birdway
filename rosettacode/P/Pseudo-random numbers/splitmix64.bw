---
  Pseudo-random numbers/Splitmix64

  https://rosettacode.org/wiki/Pseudo-random_numbers/Splitmix64

  Splitmix64 is the default pseudo-random number generator algorithm in Java and is included / available in many other languages. It uses a fairly simple algorithm that, though it is considered to be poor for cryptographic purposes, is very fast to calculate, and is "good enough" for many random number needs. It passes several fairly rigorous PRNG "fitness" tests that some more complex algorithms fail.
  Splitmix64 is not recommended for demanding random number requirements, but is often used to calculate initial states for other more complex pseudo-random number generators.
  The "standard" splitmix64 maintains one 64 bit state variable and returns 64 bits of random data with each call.
  Basic pseudocode algorithm:
  The returned value should hold 64 bits of numeric data. If your language does not support unsigned 64 bit integers directly you may need to apply appropriate bitmasks during bitwise operations.
  In keeping with the general layout of several recent pseudo-random number tasks:
  
  Task
  
  See also
  Java docs for splitmix64
 Public domain C code used in many PRNG implementations; by Sebastiano Vigna
  
  Related tasks
  Pseudo-random numbers/Combined recursive generator MRG32k3a‎‎
 Pseudo-random numbers/PCG32‎‎
 Pseudo-random_numbers/Xorshift_star
  
---
