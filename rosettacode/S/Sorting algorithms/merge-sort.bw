---
  Sorting algorithms/Merge sort

  https://rosettacode.org/wiki/Sorting_algorithms/Merge_sort

  The   merge sort   is a recursive sort of order    n*log(n).
  It is notable for having a worst case and average complexity of    O(n*log(n)),    and a best case complexity of    O(n)    (for pre-sorted input).
  The basic idea is to split the collection into smaller groups by halving it until the groups only have one element or no elements   (which are both entirely sorted groups).
  Then merge the groups back together so that their elements are in order.
  This is how the algorithm gets its   divide and conquer   description.
  
  Task
  Write a function to sort a collection of integers using the merge sort.
  The merge sort algorithm comes in two parts:
  The functions in pseudocode look like this:
  
  See also
  Note:   better performance can be expected if, rather than recursing until    length(m) ≤ 1,    an insertion sort is used for    length(m)    smaller than some threshold larger than   1.   However, this complicates the example code, so it is not shown here.
---
