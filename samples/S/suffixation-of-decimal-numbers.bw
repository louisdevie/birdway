---
  Suffixation of decimal numbers

  https://rosettacode.org/wiki/Suffixation_of_decimal_numbers

  Suffixation:   a letter or a group of letters added to the end of a word to change its meaning.
  ─────   or, as used herein   ─────
  Suffixation:   the addition of a metric or "binary" metric suffix to a number, with/without rounding.
  
  Task
  Write a function(s) to append (if possible)   a metric   or   a "binary" metric   suffix to a
number   (displayed in decimal).
  The number may be rounded   (as per user specification)   (via shortening of the number when the number of
digits past the decimal point are to be used).
  
  Task requirements

   write a function (or functions) to add   (if possible)   a suffix to a number
   the function(s) should be able to express the number (possibly with a suffix) in as many decimal digits as specified
   the sign should be preserved   (if present)
   the number may have commas within the number   (the commas need not be preserved)
   the number may have a decimal point and/or an exponent as in:   -123.7e-01
   the suffix that might be appended should be in uppercase;   however, the   i   should be in lowercase
   support:
   the            metric suffixes:   K  M  G  T  P  E  Z  Y  X  W  V  U
   the binary metric suffixes:   Ki Mi Gi Ti Pi Ei Zi Yi Xi Wi Vi Ui
   the (full name) suffix:   googol   (lowercase)   (equal to 1e100)     (optional)
   a number of decimal digits past the decimal point   (with rounding).   The default is to display all significant digits
   validation of the (supplied/specified) arguments is optional but recommended
   display   (with identifying text):
   the original number   (with identifying text)
   the number of digits past the decimal point being used   (or none, if not specified)
   the type of suffix being used   (metric or "binary" metric)
   the (new) number with the appropriate   (if any)   suffix
   all output here on this page
  
  Metric suffixes to be supported   (whether or not they're officially sanctioned)
  
  "Binary" suffixes to be supported   (whether or not they're officially sanctioned)
  
  For instance, with this pseudo─code
  would display:
  
  Use these test cases
  Use whatever parameterizing your computer language supports,   and it's permitted to create as many
separate functions as are needed   (if needed)   if   function arguments aren't allowed to
be omitted or varied.
  
---
